<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework.samples.petclinic.admin</groupId>
    <artifactId>spring-petclinic-admin-server</artifactId>
    <packaging>jar</packaging>
    <description>Spring Boot Admin server</description>

    <parent>
        <groupId>org.springframework.samples</groupId>
        <artifactId>spring-petclinic-microservices</artifactId>
        <version>1.5.3</version>
    </parent>

    <properties>
        <spring-boot-admin.version>1.5.1</spring-boot-admin.version>
    </properties>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>

        <!-- Spring Boot Admin -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-server</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-server-ui</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>

        <!-- Third-party librairies -->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>

    </dependencies>

    <profiles>
		<profile>
			<id>buildDocker</id>
			<build>
				<plugins>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.2</version>
						<executions>
							<execution>
								<id>filter-dockerfile</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/docker</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>

						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>build</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>run chmod in ${basedir}</echo>
										<chmod file="${project.basedir}/target/dockercmd.sh"
											perm="777" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.6.0</version>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution><!-- Run our docker build script -->
								<id>docker-build</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sh</executable>
									<workingDirectory>${project.basedir}/target/</workingDirectory>
							<commandlineArgs>${project.basedir}/target/dockercmd.sh ${project.artifactId} ${project.version} dockimg dennis123</commandlineArgs>
							</configuration>
							</execution>


						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>
</project>
